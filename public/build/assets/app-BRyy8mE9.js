function T(e){const o=`; ${document.cookie}`.split(`; ${e}=`);return o.length===2?o.pop().split(";").shift():null}function C(e,t,o){let s="";{const n=new Date;n.setTime(n.getTime()+o*24*60*60*1e3),s="; expires="+n.toUTCString()}document.cookie=e+"="+(t||"")+s+"; path=/; SameSite=Lax"}const x=e=>{const t=document.documentElement;if(!t)return;e==="dark"?t.classList.add("dark"):t.classList.remove("dark");const o=document.getElementById("theme-toggle-sun-icon"),s=document.getElementById("theme-toggle-moon-icon");o&&s&&(o.style.display=e==="dark"?"none":"block",s.style.display=e==="dark"?"block":"none");const n=document.getElementById("theme-toggle-sun-icon-logged-out"),c=document.getElementById("theme-toggle-moon-icon-logged-out");n&&c&&(n.style.display=e==="dark"?"none":"block",c.style.display=e==="dark"?"block":"none")},u=()=>{const t=(document.documentElement.classList.contains("dark")?"dark":"light")==="dark"?"light":"dark";C("ui-theme",t,365),x(t)},b=()=>{console.log("Attempting to initialize theme...");const e=T("ui-theme"),t=e==="dark"||e==="light"?e:"light";(!e||e!=="dark"&&e!=="light")&&C("ui-theme",t,365),x(t);const o=document.getElementById("theme-toggle"),s=document.getElementById("theme-toggle-logged-out");o&&(o.removeEventListener("click",u),o.addEventListener("click",u)),s&&(s.removeEventListener("click",u),s.addEventListener("click",u)),console.log("Theme initialized to:",t)},S=(e,t,o)=>{var l;const s=e.querySelector(".like-count"),n=(l=e.querySelector("svg"))==null?void 0:l.parentElement;if(!s||!n){console.error("Could not find like count span or icon container for button:",e);return}s.textContent=o,e.classList.toggle("text-red-500",t),e.classList.toggle("font-medium",t),e.classList.toggle("text-muted-foreground",!t);const c=e.querySelector(".like-icon-filled"),i=e.querySelector(".like-icon-outline");c&&i?(c.style.display=t?"block":"none",i.style.display=t?"none":"block"):console.warn("Could not find like icons within button:",e),e.setAttribute("aria-pressed",t.toString())},k=async e=>{const t=e.currentTarget,o=t.dataset.postId;if(!o||t.disabled)return;const n=t.getAttribute("aria-pressed")==="true"?"DELETE":"POST",c=`/api/posts/${o}/like`;t.disabled=!0,t.classList.add("opacity-70");try{const i=await fetch(c,{method:n,headers:{Accept:"application/json"}}),l=await i.json();!i.ok||!l.success?console.error(`Failed to ${n==="POST"?"like":"unlike"} post:`,l.message||`HTTP ${i.status}`):(S(t,l.userLiked,l.newLikeCount),t.setAttribute("aria-label",l.userLiked?"Unlike post":"Like post"))}catch(i){console.error("Network error during like/unlike:",i)}finally{t.disabled=!1,t.classList.remove("opacity-70")}},I=()=>{console.log("Attempting to initialize like buttons...");const e=document.querySelectorAll(".like-button");e.forEach(t=>{const o=t.classList.contains("text-red-500");t.setAttribute("aria-pressed",o.toString()),t.setAttribute("aria-label",o?"Unlike post":"Like post"),t.disabled||(t.removeEventListener("click",k),t.addEventListener("click",k))}),console.log(`Initialized ${e.length} like buttons.`)},v=e=>{const t=document.createElement("div");t.classList.add("comment-item","flex","items-start","space-x-2"),t.dataset.commentId=e.comment_id;const o=e.author_picture_url||"https://via.placeholder.com/32/cccccc/969696?text=",s=e.author_name||"Unknown User",n=e.time_ago||"",c=e.content||"";return t.innerHTML=`
        <img src="${d(o)}" alt="${d(s)}'s profile picture" class="w-8 h-8 rounded-full border bg-muted flex-shrink-0">
        <div class="flex-grow bg-muted/50 dark:bg-muted/20 rounded-md px-3 py-1.5">
            <div class="flex items-baseline space-x-2">
                <span class="font-semibold text-foreground text-xs">${d(s)}</span>
                <span class="text-muted-foreground text-xs">${d(n)}</span>
                
            </div>
            <p class="text-foreground leading-snug">${d(c).replace(/\n/g,"<br>")}</p>
        </div>
    `,t};function d(e){return typeof e!="string"?"":e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}const A=async(e,t)=>{const o=t.querySelector(".comment-list"),s=t.querySelector(".loading-comments");if(!(!o||!s)){s.style.display="block",o.innerHTML="",o.appendChild(s);try{const n=await fetch(`/api/posts/${e}/comments`),c=await n.json();s.style.display="none",!n.ok||!c.success?(console.error("Failed to load comments:",c.message||`HTTP ${n.status}`),o.innerHTML='<p class="text-destructive text-xs">Could not load comments.</p>'):c.comments&&c.comments.length>0?c.comments.forEach(i=>{o.appendChild(v(i))}):o.innerHTML='<p class="text-muted-foreground text-xs no-comments">No comments yet.</p>'}catch(n){console.error("Network error loading comments:",n),s.style.display="none",o.innerHTML='<p class="text-destructive text-xs">Error loading comments.</p>'}}},h=e=>{var i;const t=e.currentTarget,o=t.dataset.postId,s=`comment-section-${o}`,n=document.getElementById(s);if(!n)return;if(t.getAttribute("aria-expanded")==="true")n.classList.add("hidden"),t.setAttribute("aria-expanded","false");else{n.classList.remove("hidden"),t.setAttribute("aria-expanded","true");const l=((i=n.querySelector(".comment-list"))==null?void 0:i.innerHTML.trim())||"";(!!n.querySelector(".loading-comments")||l===""||l.includes("no-comments")||l.includes("Could not load"))&&A(o,n)}},L=async e=>{e.preventDefault();const t=e.currentTarget,o=t.dataset.postId,s=t.querySelector('textarea[name="content"]'),n=t.querySelector('button[type="submit"]'),c=document.getElementById(`comment-section-${o}`),i=c?c.querySelector(".comment-list"):null,l=document.querySelector(`[data-post-container-id="${o}"]`),m=l?l.querySelector(".comment-count-display"):null;if(console.log("handleAddComment Debug Info:"),console.log("  - Post ID:",o),console.log("  - Textarea found:",!!s),console.log("  - Submit Button found:",!!n),console.log("  - Comment Section found:",!!c),console.log("  - Comment List found:",!!i),console.log("  - Post Container found:",!!l),console.log("  - Comment Count Display found:",!!m),!o||!s||!n||!i||!m||!c||!l){console.error("Could not find necessary elements for adding comment. Check specific logs above.");return}const g=i,E=m,p=s.value.trim();if(p===""){s.focus(),s.classList.add("ring-1","ring-destructive"),setTimeout(()=>s.classList.remove("ring-1","ring-destructive"),1500);return}n.disabled=!0,n.textContent="Posting...";try{const a=await fetch(`/api/posts/${o}/comments`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({content:p})}),r=await a.json();if(!a.ok||!r.success)console.error("Failed to add comment:",r.message||`HTTP ${a.status}`),alert(`Error: ${r.message||"Could not post comment."}`);else{s.value="";const f=g.querySelector(".no-comments");f&&f.remove(),r.comment&&g.appendChild(v(r.comment));const y=r.newCommentCount;E.textContent=`${y} ${y===1?"Comment":"Comments"}`}}catch(a){console.error("Network error adding comment:",a),alert("A network error occurred. Please try again.")}finally{n.disabled=!1,n.textContent="Post"}},$=()=>{console.log("Attempting to initialize comments..."),document.querySelectorAll(".comment-toggle-button").forEach(e=>{e.removeEventListener("click",h),e.disabled||e.addEventListener("click",h)}),document.querySelectorAll(".add-comment-form").forEach(e=>{e.removeEventListener("submit",L),e.addEventListener("submit",L)}),console.log("Comment listeners attached.")};document.addEventListener("DOMContentLoaded",()=>{console.log("DOMContentLoaded event fired."),b(),I(),$()});console.log("Bailanysta app.js script parsed (Includes Comment AJAX).");
