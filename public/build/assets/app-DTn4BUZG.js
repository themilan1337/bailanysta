const H=typeof BASE_URL<"u"?BASE_URL:"";function W(t){const o=`; ${document.cookie}`.split(`; ${t}=`);return o.length===2?o.pop().split(";").shift():null}function G(t,e,o){let n="";{const s=new Date;s.setTime(s.getTime()+o*24*60*60*1e3),n="; expires="+s.toUTCString()}document.cookie=t+"="+(e||"")+n+"; path=/; SameSite=Lax"}function l(t){return typeof t!="string"?"":t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}function Y(t){return typeof t>"u"||t===null?"":(t+"").replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g,"$1<br>$2")}const K=t=>{const e=document.documentElement;if(!e)return;t==="dark"?e.classList.add("dark"):e.classList.remove("dark");const o=document.getElementById("theme-toggle-sun-icon"),n=document.getElementById("theme-toggle-moon-icon");o&&n&&(o.style.display=t==="dark"?"none":"block",n.style.display=t==="dark"?"block":"none");const s=document.getElementById("theme-toggle-sun-icon-logged-out"),i=document.getElementById("theme-toggle-moon-icon-logged-out");s&&i&&(s.style.display=t==="dark"?"none":"block",i.style.display=t==="dark"?"block":"none")},b=()=>{const e=(document.documentElement.classList.contains("dark")?"dark":"light")==="dark"?"light":"dark";G("ui-theme",e,365),K(e)},Z=()=>{console.log("Attempting to initialize theme...");const t=W("ui-theme"),e=t==="dark"||t==="light"?t:"light";(!t||t!=="dark"&&t!=="light")&&G("ui-theme",e,365),K(e);const o=document.getElementById("theme-toggle"),n=document.getElementById("theme-toggle-logged-out");o&&(o.removeEventListener("click",b),o.addEventListener("click",b)),n&&(n.removeEventListener("click",b),n.addEventListener("click",b)),console.log("Theme initialized to:",e)},ee=(t,e,o)=>{var c;const n=t.querySelector(".like-count"),s=(c=t.querySelector("svg"))==null?void 0:c.parentElement;if(!n||!s){console.error("Could not find like count span or icon container for button:",t);return}n.textContent=o,t.classList.toggle("text-red-500",e),t.classList.toggle("font-medium",e),t.classList.toggle("text-muted-foreground",!e);const i=t.querySelector(".like-icon-filled"),r=t.querySelector(".like-icon-outline");i&&r?(i.style.display=e?"block":"none",r.style.display=e?"none":"block"):console.warn("Could not find like icons within button:",t),t.setAttribute("aria-pressed",e.toString())},P=async t=>{const e=t.currentTarget,o=e.dataset.postId;if(!o||e.disabled)return;const s=e.getAttribute("aria-pressed")==="true"?"DELETE":"POST",i=`/api/posts/${o}/like`;e.disabled=!0,e.classList.add("opacity-70");try{const r=await fetch(i,{method:s,headers:{Accept:"application/json"}}),c=await r.json();!r.ok||!c.success?console.error(`Failed to ${s==="POST"?"like":"unlike"} post:`,c.message||`HTTP ${r.status}`):(ee(e,c.userLiked,c.newLikeCount),e.setAttribute("aria-label",c.userLiked?"Unlike post":"Like post"))}catch(r){console.error("Network error during like/unlike:",r)}finally{e.disabled=!1,e.classList.remove("opacity-70")}},w=()=>{console.log("Attempting to initialize like buttons...");const t=document.querySelectorAll(".like-button");t.forEach(e=>{const o=e.classList.contains("text-red-500");e.setAttribute("aria-pressed",o.toString()),e.setAttribute("aria-label",o?"Unlike post":"Like post"),e.disabled||(e.removeEventListener("click",P),e.addEventListener("click",P))}),console.log(`Initialized ${t.length} like buttons.`)},Q=t=>{const e=document.createElement("div");e.classList.add("comment-item","flex","items-start","space-x-2"),e.dataset.commentId=t.comment_id;const o=t.author_picture_url||"https://via.placeholder.com/32/cccccc/969696?text=",n=t.author_name||"Unknown User",s=t.time_ago||"",i=t.content||"";return e.innerHTML=` <img src="${l(o)}" alt="${l(n)}'s profile picture" class="w-8 h-8 rounded-full border bg-muted flex-shrink-0"> <div class="flex-grow bg-muted/50 dark:bg-muted/20 rounded-md px-3 py-1.5"> <div class="flex items-baseline space-x-2"> <span class="font-semibold text-foreground text-xs">${l(n)}</span> <span class="text-muted-foreground text-xs">${l(s)}</span> </div> <p class="text-foreground leading-snug">${l(i).replace(/\n/g,"<br>")}</p> </div> `,e},te=async(t,e)=>{const o=e.querySelector(".comment-list"),n=e.querySelector(".loading-comments");if(!(!o||!n)){n.style.display="block",o.innerHTML="",o.appendChild(n);try{const s=await fetch(`/api/posts/${t}/comments`),i=await s.json();n.style.display="none",!s.ok||!i.success?(console.error("Failed to load comments:",i.message||`HTTP ${s.status}`),o.innerHTML='<p class="text-destructive text-xs">Could not load comments.</p>'):i.comments&&i.comments.length>0?i.comments.forEach(r=>{o.appendChild(Q(r))}):o.innerHTML='<p class="text-muted-foreground text-xs no-comments">No comments yet.</p>'}catch(s){console.error("Network error loading comments:",s),n.style.display="none",o.innerHTML='<p class="text-destructive text-xs">Error loading comments.</p>'}}},M=t=>{var r;const e=t.currentTarget,o=e.dataset.postId,n=`comment-section-${o}`,s=document.getElementById(n);if(!s)return;if(e.getAttribute("aria-expanded")==="true")s.classList.add("hidden"),e.setAttribute("aria-expanded","false");else{s.classList.remove("hidden"),e.setAttribute("aria-expanded","true");const c=((r=s.querySelector(".comment-list"))==null?void 0:r.innerHTML.trim())||"";(!!s.querySelector(".loading-comments")||c===""||c.includes("no-comments")||c.includes("Could not load"))&&te(o,s)}},N=async t=>{t.preventDefault();const e=t.currentTarget,o=e.dataset.postId,n=e.querySelector('textarea[name="content"]'),s=e.querySelector('button[type="submit"]'),i=document.getElementById(`comment-section-${o}`),r=i?i.querySelector(".comment-list"):null,c=document.querySelector(`[data-post-container-id="${o}"]`),a=c?c.querySelector(".comment-count-display"):null;if(console.log("handleAddComment Debug Info:"),console.log("  - Post ID:",o),console.log("  - Textarea found:",!!n),console.log("  - Submit Button found:",!!s),console.log("  - Comment Section found:",!!i),console.log("  - Comment List found:",!!r),console.log("  - Post Container found:",!!c),console.log("  - Comment Count Display found:",!!a),!o||!n||!s||!r||!a||!i||!c){console.error("Could not find necessary elements for adding comment. Check specific logs above.");return}const h=r,p=a,g=n.value.trim();if(g===""){n.focus(),n.classList.add("ring-1","ring-destructive"),setTimeout(()=>n.classList.remove("ring-1","ring-destructive"),1500);return}s.disabled=!0,s.textContent="Posting...";const q={content:g};console.log("[Comment Store - JS Sending]",JSON.stringify(q));try{const x=await fetch(`/api/posts/${o}/comments`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(q)}),y=await x.json();if(!x.ok||!y.success)console.error("Failed to add comment:",y.message||`HTTP ${x.status}`),alert(`Error: ${y.message||"Could not post comment."}`);else{n.value="";const B=h.querySelector(".no-comments");B&&B.remove(),y.comment&&h.appendChild(Q(y.comment));const _=y.newCommentCount;p.textContent=`${_} ${_===1?"Comment":"Comments"}`}}catch(x){console.error("Network error adding comment:",x),alert("A network error occurred. Please try again.")}finally{s.disabled=!1,s.textContent="Post"}},$=()=>{console.log("Attempting to initialize comments..."),document.querySelectorAll(".comment-toggle-button").forEach(t=>{t.removeEventListener("click",M),t.disabled||t.addEventListener("click",M)}),document.querySelectorAll(".add-comment-form").forEach(t=>{t.removeEventListener("submit",N),t.addEventListener("submit",N)}),console.log("Comment listeners attached.")},oe=(t,e)=>{const o=t.querySelector(".follow-text");o&&(o.textContent=e?"Following":"Follow",t.classList.toggle("border",e),t.classList.toggle("border-input",e),t.classList.toggle("bg-background",e),t.classList.toggle("hover:bg-accent",e),t.classList.toggle("hover:text-accent-foreground",e),t.classList.toggle("bg-primary",!e),t.classList.toggle("text-primary-foreground",!e),t.classList.toggle("hover:bg-primary/90",!e),t.setAttribute("aria-pressed",e.toString()))},O=async t=>{const e=t.currentTarget,o=e.dataset.userId,n=e.querySelector(".loading-spinner");if(!o||e.disabled)return;const i=e.getAttribute("aria-pressed")==="true"?"DELETE":"POST",r=`/api/users/${o}/follow`;e.disabled=!0,n&&n.classList.remove("hidden");try{const c=await fetch(r,{method:i,headers:{Accept:"application/json"}}),a=await c.json();!c.ok||!a.success?(console.error(`Failed to ${i==="POST"?"follow":"unfollow"} user:`,a.message||`HTTP ${c.status}`),alert(`Error: ${a.message||"Could not perform follow action."}`)):(oe(e,a.isFollowingNow),console.log(a.message))}catch(c){console.error("Network error during follow/unfollow:",c),alert("A network error occurred. Please try again.")}finally{e.disabled=!1,n&&n.classList.add("hidden")}},ne=()=>{console.log("Attempting to initialize follow buttons..."),document.querySelectorAll(".follow-toggle-button").forEach(t=>{t.removeEventListener("click",O),t.disabled||t.addEventListener("click",O)}),console.log("Follow button listeners attached.")},I=(t,e)=>{var r;const o=t.querySelector(".post-display-content"),n=t.querySelector(".post-edit-form"),s=t.querySelector(".post-options-menu"),i=n==null?void 0:n.querySelector(".edit-status");if(!(!o||!n))if(o.classList.toggle("hidden",e),n.classList.toggle("hidden",!e),i&&(i.textContent=""),e&&s&&s.classList.add("hidden"),e)(r=n.querySelector("textarea"))==null||r.focus();else{o.innerHTML;const c=o.textContent||"";n.querySelector("textarea").value=c}},j=t=>{const o=t.currentTarget.closest("article[data-post-container-id]");o&&I(o,!0)},D=t=>{const o=t.currentTarget.closest("article[data-post-container-id]");o&&I(o,!1)},z=async t=>{t.preventDefault();const e=t.currentTarget,o=e.dataset.postId,n=e.querySelector('textarea[name="content"]'),s=e.querySelector(".edit-save-button"),i=e.querySelector(".edit-cancel-button"),r=e.querySelector(".edit-status"),c=e.closest("article[data-post-container-id]"),a=c==null?void 0:c.querySelector(".post-display-content");if(!o||!n||!s||!i||!c||!a||!r){console.error("Missing elements for edit save.");return}const h=n.value.trim();if(h===""){alert("Post content cannot be empty."),n.focus();return}s.disabled=!0,i.disabled=!0,n.disabled=!0,r.textContent="Saving...",r.classList.remove("text-destructive");try{const p=await fetch(`/api/posts/${o}/update`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({content:h})}),g=await p.json();!p.ok||!g.success?(console.error("Failed to update post:",g.message||`HTTP ${p.status}`),r.textContent=`Error: ${g.message||"Could not save."}`,r.classList.add("text-destructive"),s.disabled=!1,i.disabled=!1,n.disabled=!1):(a.innerHTML=g.newContentHtml||Y(l(h)),r.textContent="",I(c,!1),s.disabled=!1,i.disabled=!1,n.disabled=!1)}catch(p){console.error("Network error updating post:",p),r.textContent="Network error.",r.classList.add("text-destructive"),s.disabled=!1,i.disabled=!1,n.disabled=!1}},U=async t=>{const e=t.currentTarget,o=e.closest("article[data-post-container-id]"),n=o==null?void 0:o.dataset.postContainerId,s=e.closest(".post-options-menu");if(!(!n||!o)){if(!confirm("Are you sure you want to delete this post? This cannot be undone.")){s&&s.classList.add("hidden");return}e.disabled=!0,s&&s.classList.add("hidden");try{const i=await fetch(`/api/posts/${n}`,{method:"DELETE",headers:{Accept:"application/json"}}),r=await i.json();!i.ok||!r.success?(console.error("Failed to delete post:",r.message||`HTTP ${i.status}`),alert(`Error: ${r.message||"Could not delete post."}`),e.disabled=!1):(console.log(r.message),o.style.transition="opacity 0.5s ease-out",o.style.opacity="0",setTimeout(()=>{o.remove()},500))}catch(i){console.error("Network error deleting post:",i),alert("A network error occurred while deleting the post."),e.disabled=!1}}},A=()=>{console.log("Attempting to initialize post options..."),document.querySelectorAll(".post-options-dropdown").forEach(t=>{const e=t.querySelector(".post-options-button"),o=t.querySelector(".post-options-menu");if(!e||!o)return;e.removeEventListener("click",R),e.addEventListener("click",R);const n=o.querySelector(".post-edit-button");n&&(n.removeEventListener("click",j),n.addEventListener("click",j));const s=o.querySelector(".post-delete-button");s&&(s.removeEventListener("click",U),s.addEventListener("click",U))}),document.removeEventListener("click",S),document.addEventListener("click",S),document.querySelectorAll(".post-edit-form").forEach(t=>{const e=t.querySelector(".edit-cancel-button");e&&(e.removeEventListener("click",D),e.addEventListener("click",D)),t.removeEventListener("submit",z),t.addEventListener("submit",z)}),console.log("Post options listeners attached.")},R=t=>{var s;t.stopPropagation();const o=(s=t.currentTarget.closest(".post-options-dropdown"))==null?void 0:s.querySelector(".post-options-menu");if(!o)return;const n=o.classList.contains("hidden");S(t,o),n?o.classList.remove("hidden"):o.classList.add("hidden")},S=(t,e=null)=>{document.querySelectorAll(".post-options-menu").forEach(o=>{o!==e&&!o.closest(".post-options-dropdown").contains(t.target)&&o.classList.add("hidden")})},C=document.getElementById("notification-toggle-button"),L=document.getElementById("notification-count-badge"),E=document.getElementById("notification-list"),f=document.getElementById("notification-items-container"),k=document.getElementById("mark-all-read-button");let u=[];const se=t=>{let e="",o="#";const n=l(t.actor_name||"Someone"),s=l(t.actor_picture||"https://via.placeholder.com/32/cccccc/969696?text="),i=l(t.time_ago||"");switch(t.type){case"like":e="liked your post.",t.post_id&&(o=`/post/${t.post_id}`,o="#");break;case"comment":e="commented on your post.",t.post_id&&(o=`/post/${t.post_id}`,o="#");break;case"follow":e="started following you.",t.actor_id&&(o=`/profile/${t.actor_id}`);break;default:e="sent you a notification."}return`
                    <a href="${o}" class="notification-item flex items-start px-3 py-2 hover:bg-accent text-foreground" data-notification-id="${t.id}">
                        <img src="${s}" alt="${n}'s picture" class="w-8 h-8 rounded-full border bg-muted mr-2 flex-shrink-0">
                        <div class="flex-grow">
                            <p class="text-xs leading-snug">
                                <strong class="font-medium">${n}</strong> ${e}
                            </p>
                            <p class="text-xs text-muted-foreground mt-0.5">${i}</p>
                        </div>
                        ${t.is_read?"":'<span class="ml-2 mt-1 w-2 h-2 bg-primary rounded-full flex-shrink-0" title="Unread"></span>'}
                    </a>
                `},V=(t,e)=>{L&&(t>0?(L.textContent=t>9?"9+":t,L.classList.remove("hidden")):L.classList.add("hidden")),f&&(e.length>0?f.innerHTML=e.map(se).join(""):f.innerHTML='<p class="p-4 text-muted-foreground text-center text-xs">No unread notifications.</p>'),k&&(k.disabled=t===0)},ie=async()=>{if(C){console.log("Fetching notifications...");try{const t=await fetch("/api/notifications");if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const e=await t.json();e.success?(u=e.notifications||[],V(e.unread_count||0,u)):(console.error("Failed to fetch notifications:",e.message),f&&(f.innerHTML='<p class="p-4 text-destructive text-center text-xs">Could not load notifications.</p>'))}catch(t){console.error("Network error fetching notifications:",t),f&&(f.innerHTML='<p class="p-4 text-destructive text-center text-xs">Error loading notifications.</p>'),L&&L.classList.add("hidden"),k&&(k.disabled=!0)}}},F=async(t=null)=>{if(!t&&u.length===0)return;const e=t||u.map(o=>o.id);if(e.length!==0){console.log("Marking notifications read:",e);try{const o=await fetch("/api/notifications/mark-read",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify({ids:e})}),n=await o.json();!o.ok||!n.success?console.error("Failed to mark notifications read:",n.message):(console.log("Notifications marked read."),u=u.filter(s=>!e.includes(s.id)),V(u.length,u))}catch(o){console.error("Network error marking notifications read:",o)}}},re=()=>{C&&(console.log("Initializing notifications..."),C.addEventListener("click",t=>{t.stopPropagation();const e=E.classList.contains("hidden");S(t),E.classList.toggle("hidden"),e&&u.length>0&&setTimeout(()=>{F()},5e3)}),k&&k.addEventListener("click",()=>{F()}),document.addEventListener("click",t=>{!E.classList.contains("hidden")&&!notificationDropdownContainer.contains(t.target)&&E.classList.add("hidden")}),ie(),console.log("Notification listeners attached."))},J=document.getElementById("search-input"),m=document.getElementById("feed-posts-container"),T=document.getElementById("search-spinner"),d=document.getElementById("search-error"),ce=m?m.innerHTML:"";let X=null,v=null;const ae=t=>{m&&(d.textContent="",d.classList.add("hidden"),t.length===0?m.innerHTML='<p class="text-center text-muted-foreground py-10">No posts found matching your search.</p>':(m.innerHTML=t.map(e=>`
                             <article class="bg-card border rounded-lg shadow-sm overflow-hidden flex flex-col" data-post-container-id="${e.post_id}">
                                 <div class="p-4 flex items-start space-x-3">
                                     <a href="${H}/profile/${e.author_id}">
                                         <img src="${l(e.author_picture_url||"https://via.placeholder.com/40/cccccc/969696?text=")}" alt="${l(e.author_name)}'s picture" class="w-10 h-10 rounded-full border bg-muted">
                                     </a>
                                     <div class="flex-grow">
                                         <a href="${H}/profile/${e.author_id}" class="font-semibold text-foreground hover:underline">${l(e.author_name)}</a>
                                         <p class="text-xs text-muted-foreground">${l(e.time_ago)}</p>
                                     </div>
                                     ${e.isAuthor?"<!-- TODO: Add options button -->":""}
                                 </div>
                                 <div class="post-content-area px-4 pb-4">
                                     <div class="post-display-content max-w-none dark:text-gray-200">
                                          ${e.content}
                                     </div>
                                     ${e.isAuthor?"<!-- TODO: Add Edit Form -->":""}
                                 </div>
                                 <div class="px-4 pt-3 pb-1 border-t flex items-center justify-between text-sm text-muted-foreground">
                                    <div class="flex space-x-4">
                                       <span class="like-count-display">${e.like_count} ${e.like_count==1?"Like":"Likes"}</span>
                                       <span class="comment-count-display">${e.comment_count} ${e.comment_count==1?"Comment":"Comments"}</span>
                                    </div>
                                 </div>
                                  <div class="p-2 border-t grid grid-cols-2 gap-1">
                                        <!-- TODO: Re-render Like/Comment buttons properly with state/listeners -->
                                        <button disabled class="flex items-center justify-center space-x-1.5 py-1.5 px-3 rounded-md text-muted-foreground opacity-50">Like</button>
                                        <button disabled class="flex items-center justify-center space-x-1.5 py-1.5 px-3 rounded-md text-muted-foreground opacity-50">Comment</button>
                                  </div>
                             </article>
                         `).join(""),w(),$(),A()))},le=async t=>{if(!m||!T||!d)return;v&&v.abort(),v=new AbortController;const e=v.signal;if(T.classList.remove("hidden"),d.textContent="",d.classList.add("hidden"),t.trim()===""){m.innerHTML=ce,T.classList.add("hidden"),w(),$(),A();return}try{const o=await fetch(`/api/posts/search?q=${encodeURIComponent(t)}`,{signal:e});if(!o.ok)throw new Error(`HTTP error! status: ${o.status}`);const n=await o.json();n.success?ae(n.posts):(d.textContent=n.message||"Search failed.",d.classList.remove("hidden"),m.innerHTML="")}catch(o){o.name==="AbortError"?console.log("Search request aborted."):(console.error("Search network error:",o),d.textContent="Error performing search. Check connection.",d.classList.remove("hidden"),m.innerHTML="")}finally{T.classList.add("hidden"),v=null}},de=()=>{J&&(console.log("Initializing search..."),J.addEventListener("input",t=>{const e=t.target.value;clearTimeout(X),X=setTimeout(()=>{le(e)},500)}),console.log("Search listener attached."))};document.addEventListener("DOMContentLoaded",()=>{console.log("DOMContentLoaded event fired."),Z(),w(),$(),ne(),A(),re(),de()});console.log("Bailanysta app.js script parsed (Includes Search AJAX).");
